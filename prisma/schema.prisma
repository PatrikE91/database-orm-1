generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Customer {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  contact   Contact?
  ticket    Ticket[]
}

model Contact {
  id         Int      @id @default(autoincrement())
  phone      String
  email      String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  customerId Int      @unique
  customer   Customer @relation(fields: [customerId], references: [id])
}

model Movie {
  id          Int         @id @default(autoincrement())
  title       String
  runtimeMins Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  screening   Screening[]
}

model Screening {
  id        Int      @id @default(autoincrement())
  startsAt  DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  movieId   Int      @unique
  movie     Movie    @relation(fields: [movieId], references: [id])
  ticket    Ticket[]
}

model Screen {
  id        Int      @id @default(autoincrement())
  number    Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ticket {
  id        Int       @id @default(autoincrement())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  customer  Customer  @relation(fields: [id], references: [id], map: "ticket_customer_fk")
  screening Screening @relation(fields: [id], references: [id], map: "ticket_comment_fk")
}
